{
  "name": "css-list",
  "version": "0.1.2",
  "description": "css parsing helpers",
  "main": "index.js",
  "scripts": {
    "test": "tape test/*.js | tap-spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/TrySound/css-list"
  },
  "keywords": [
    "css",
    "parse",
    "list",
    "postcss"
  ],
  "author": {
    "name": "Bogdan Chadkin",
    "email": "trysound@yandex.ru"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TrySound/css-list/issues"
  },
  "homepage": "https://github.com/TrySound/css-list",
  "devDependencies": {
    "tap-spec": "^4.0.2",
    "tape": "^4.0.0"
  },
  "readme": "# css-list [![Build Status](https://travis-ci.org/TrySound/css-list.svg)](https://travis-ci.org/TrySound/css-list)\ncss parsing helpers\n\n## API\n\nIf `separators` is not specified, it will default to\n`[' ', '\\n', '\\t', ',', '/']`.\n\n### list.each(input[, separators], cb)\n\n```js\nlist.each('\"50%\" 50%/100% calc(100% + 20%)', [' ', '/'], function (value, type) {\n\t// \"50%\" quote\n\t// 50% null\n\t// 100% null\n\t// calc(100% + 20%) func\n});\n```\n\n### list.map(input[, separators], cb)\n\n```js\nlist.map('\"50%\" 50%/100% calc(100% + 20%)', [' ', '/'], function (value, type, prevValue, prevType) {\n\tif(type === 'func' || type === 'quote') {\n\t\treturn type;\n\t}\n});\n// quote 50%/100% func\n```\n\n### list.split(input[, separators], last)\n\n```js\n// space\nlist.split('10px 20px 5px 15px')', ['\\n', '\\t', ' '])\n// ['10px', '20px', '5px', '15px']\n```\n\n```js\n// comma\nlist.split('10px, 20px, 5px, ')', [','], true)\n// ['10px', '20px', '5px', '']\n```\n",
  "readmeFilename": "README.md",
  "_id": "css-list@0.1.2",
  "_from": "css-list@^0.1.2"
}
